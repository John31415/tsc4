{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=371; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

() recv_internal() {
}

(tuple) empty_tuple() inline asm "NIL";

(tuple) fib (int n,int k) inline asm "-1 INT 1 INT s3 PUSH s3 PUSH ADD <{ DUP2 ADD s2 s3 XCHG }>REPEAT ROTREV TUPLEVAR 1 RETARGS";

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id { 
    if(k == 0){
        return empty_tuple();
    }
    return fib(n,k);
}
;; git add . && git commit -m "cualquier cosa" && git push -u origin main
;; 5.656760460407202
;; 856124